syntax = "proto3";

package api.note_v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package = "github.com/Nau077/golang-pet-first/pkg/note_v1";

service NoteService {
  rpc CreateNote (CreateNoteRequest) returns (CreateNoteResponse) {
    option (google.api.http) = {
      post: "/note/v1/create",
      body: "*"
    };
  };

  rpc DeleteNote (DeleteNoteRequest) returns (Empty)  {
    option (google.api.http) = {
      delete: "/note/v1/delete/{id}"
    };
  };

  rpc UpdateNote (UpdateNoteRequest) returns (UpdateNoteResponse) {
    option (google.api.http) = {
      put: "/note/v1/update"
      body: "*"
    };
  };

  rpc GetNote (GetNoteRequest) returns (GetNoteResponse){
    option (google.api.http) = {
      get: "/note/v1/get/{id}"
    };
  };

  rpc GetNoteList (Empty) returns (GetNoteListResponse){
    option (google.api.http) = {
      get: "/note/v1/list"
    };
  }
}

message Empty {
}

message NoteContent {
  string title = 1;
  string text = 2;
  string author = 3;
  string email = 4 [(validate.rules).string.email = true];
}

message Record {
    int64 id = 1;
    NoteContent note_content = 2;
    google.protobuf.Timestamp created_at = 4;   
    google.protobuf.Timestamp updated_at = 3;
}

message UpdateNoteInfo {
  int64 id = 1;
  google.protobuf.StringValue title = 2;
  google.protobuf.StringValue text = 3;
  google.protobuf.StringValue author = 4;
  google.protobuf.StringValue email = 5 [(validate.rules).string.email = true];
}

message CreateNoteRequest {
   NoteContent NoteContent = 1;
}

message CreateNoteResponse {
  int64 id = 1;
}

message DeleteNoteRequest {
  int64 id = 1;
}

message UpdateNoteRequest {
    UpdateNoteInfo UpdateNoteInfo = 1;
}

message UpdateNoteResponse {
  int64 id = 1;
}

message GetNoteRequest {
  int64 id = 1;
}

message GetNoteResponse {
   Record record = 1;
}

message GetNoteListResponse {
  repeated Record records = 1;
}